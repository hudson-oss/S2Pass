name: iOS Simulator Build (Appetize) v24

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    env:
      CONFIG: Release
      SDK: iphonesimulator
      DEST: generic/platform=iOS Simulator
      DERIVED: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up Xcode 16.x
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16'

      - name: Install tools
        run: |
          brew update
          brew install xcodegen

      - name: Ensure source tree
        run: |
          mkdir -p Sources/S2Pass

      - name: Update deployment target
        run: |
          sed -i.bak 's/IPHONEOS_DEPLOYMENT_TARGET: [0-9.]\+/IPHONEOS_DEPLOYMENT_TARGET: 16.0/' project.yml

      - name: Generate Xcode project
        run: |
          xcodegen generate
          xcodebuild -list -project S2Pass.xcodeproj

      - name: Build (signing off, manual signing)
        run: |
          set -euo pipefail
          xcodebuild \
            -project S2Pass.xcodeproj \
            -scheme S2Pass \
            -sdk "$SDK" \
            -configuration "$CONFIG" \
            -destination "$DEST" \
            -derivedDataPath "$DERIVED" \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM="" \
            ARCHS=x86_64 \
            EXCLUDED_ARCHS=arm64 \
            ASSETCATALOG_COMPILER_APPICON_NAME="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_IDENTITY=""

      - name: Package .app for Appetize
        run: |
          set -euo pipefail
          # Determine build settings to locate product
          BUILD_SETTINGS=$(xcodebuild -project S2Pass.xcodeproj -scheme S2Pass -sdk "$SDK" -configuration "$CONFIG" -showBuildSettings)
          TARGET_BUILD_DIR=$(echo "$BUILD_SETTINGS" | grep -m1 " TARGET_BUILD_DIR = " | sed 's/.* = //')
          FULL_PRODUCT_NAME=$(echo "$BUILD_SETTINGS" | grep -m1 " FULL_PRODUCT_NAME = " | sed 's/.* = //')
          APP_PATH="$TARGET_BUILD_DIR/$FULL_PRODUCT_NAME"
          echo "TARGET_BUILD_DIR=$TARGET_BUILD_DIR"
          echo "FULL_PRODUCT_NAME=$FULL_PRODUCT_NAME"
          echo "Packaging app at $APP_PATH"
          ls -R "$APP_PATH" | head -20
          cd "$TARGET_BUILD_DIR"
          zip -r AppetizeBuild.app.zip "$FULL_PRODUCT_NAME"
          mv AppetizeBuild.app.zip "$GITHUB_WORKSPACE/AppetizeBuild.app.zip"

      - name: Upload artifact (Appetize)
        uses: actions/upload-artifact@v4
        with:
          name: appetize-simulator-app
          path: AppetizeBuild.app.zip

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild-log
          path: ${{ github.workspace }}/xcodebuild.log
          if-no-files-found: warn
