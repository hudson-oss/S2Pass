name: iOS Simulator Build (Appetize) v42
on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/ios-simulator-build_v42.yml'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Install xcodegen
        run: brew install xcodegen

      - name: Ensure Assets and dummy AppIcon
        run: |
          mkdir -p Assets.xcassets/AppIcon.appiconset
          cat > Assets.xcassets/AppIcon.appiconset/Contents.json <<'EOF'
          {
            "images" : [
            ],
            "info" : {
              "version" : 1,
              "author" : "xcode"
            }
          }
          EOF

      - name: Update deployment target in project.yml
        run: |
          sed -i '' -e 's/deploymentTarget: "15.0"/deploymentTarget: "17.0"/' project.yml
          sed -i '' -e 's/"deploymentTarget": "15.0"/"deploymentTarget": "17.0"/' project.yml || true

      - name: Remove existing Xcode project
        run: rm -rf S2Pass.xcodeproj

      - name: Generate Xcode project
        run: xcodegen generate

      - name: Build for iOS Simulator
        run: |
          xcodebuild \
            -scheme S2Pass \
            -sdk iphonesimulator \
            -configuration Release \
            -derivedDataPath build \
            -destination 'generic/platform=iOS Simulator' \
            IPHONEOS_DEPLOYMENT_TARGET=17.0 \
            BUILD_LIBRARY_FOR_DISTRIBUTION=NO \
            ONLY_ACTIVE_ARCH=NO \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="" \
            DEVELOPMENT_TEAM="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            ASSETCATALOG_COMPILER_APPICON_NAME=""
        timeout-minutes: 30

      - name: Package .app for Appetize
        run: |
          APP_DIR="$PWD/build/Build/Products/Release-iphonesimulator"
          APP_NAME=$(find "$APP_DIR" -maxdepth 1 -name '*.app' -type d | head -n 1)
          zip -r "$GITHUB_WORKSPACE/AppetizeBuild.app.zip" "$APP_NAME"
          du -h "$GITHUB_WORKSPACE/AppetizeBuild.app.zip"

      - name: Upload artifact (Appetize)
        uses: actions/upload-artifact@v4
        with:
          name: appetize-simulator-app
          path: AppetizeBuild.app.zip

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild-log
          path: build/Build
