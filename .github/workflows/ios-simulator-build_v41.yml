name: iOS Simulator Build (Appetize) v41
on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/ios-simulator-build_v41.yml'

jobs:
  build:
    runs-on: macos-latest
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'
      - name: Install xcodegen
        run: brew install xcodegen
      - name: Ensure asset catalog
        run: mkdir -p Assets.xcassets/AppIcon.appiconset
      - name: Update deployment target
        run: sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 18.0;/IPHONEOS_DEPLOYMENT_TARGET = 16.0;/g' project.yml
      - name: Remove existing Xcode project
        run: rm -rf S2Pass.xcodeproj
      - name: Generate Xcode project
        run: xcodegen generate
      - name: Build for iOS Simulator
        run: |
          xcodebuild -scheme S2Pass -sdk iphonesimulator -configuration Release -derivedDataPath build -destination 'generic/platform=iOS Simulator' BUILD_LIBRARY_FOR_DISTRIBUTION=NO ONLY_ACTIVE_ARCH=NO ASSETCATALOG_COMPILER_APPICON_NAME="" CODE_SIGN_STYLE=Manual DEVELOPMENT_TEAM="" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
      - name: Package .app for Appetize
        run: |
          APP_DIR="$PWD/build/Build/Products/Release-iphonesimulator"
          APP_NAME=$(find "$APP_DIR" -maxdepth 1 -name '*.app' -type d | head -n 1)
          zip -r AppetizeBuild.app.zip "$APP_NAME"
          du -h AppetizeBuild.app.zip || true
      - uses: actions/upload-artifact@v4
        with:
          name: appetize-simulator-app
          path: AppetizeBuild.app.zip
      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild-log
          path: build/Build/*/Logs
